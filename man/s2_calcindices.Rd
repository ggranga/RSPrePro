% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s2_calcindices.R
\name{s2_calcindices}
\alias{s2_calcindices}
\title{Compute maps of spectral indices}
\usage{
s2_calcindices(infiles, indices, outdir = ".", parameters = NULL,
  source = c("TOA", "BOA"), format = NA, subdirs = NA,
  compress = "DEFLATE", dataType = "Int16", overwrite = FALSE)
}
\arguments{
\item{infiles}{A vector of input filenames. Input files are paths
of BOA (or TOA) products already converted from SAFE format to a
format managed by GDAL (use \link{s2_translate} to do it);
their names must be in the fidolasen-S2 naming convention
(\link{s2_shortname}).}

\item{indices}{Character vector with the names of the required
indices. Values should be included in names corresponding to the
Abbreviations of the following indices:
\href{http://www.indexdatabase.de/db/is.php?sensor_id=96}{IDB}
FIXME the list of the accepted values is a subset; this reference
will be replaced with an internal html page integrated in the
shiny interface).}

\item{outdir}{(optional) Full name of the output directory where
the files should be created (default: current directory).
\code{outdir} can bot be an existing or non-existing directory (in the
second case, its parent directory must exists).
If it is a relative path, it is expanded from the common parent
directory of \code{infiles}.}

\item{parameters}{(optional) Values of index parameters. This variable
must be a named list, in which each element is a list of parameters,
i.e.:
\code{parameters = list("SAVI" = list("a" = 0.5))}
TODO: add default values (in the json)}

\item{source}{(optional) Vector with the products from which computing
the indices. It can be "BOA", "TOA" or both (default). If both values
are provided, indices are computed from the available products ("TOA"
if TOA is available, BOA if BOA is available); in the case both are
available, two files are produced (they can be distinguished from the
level component - S2x1C or S2x2A - in the filename).}

\item{format}{(optional) Format of the output file (in a
format recognised by GDAL). Default is the same format of input images
(or "GTiff" in case of VRT input images).}

\item{subdirs}{(optional) Logical: if TRUE, different indices are
placed in separated \code{outfile} subdirectories; if FALSE, they are placed in
\code{outfile} directory; if NA (default), subdirectories are created only if
more than a single spectral index is required.}

\item{compress}{(optional) In the case a GTiff format is
present, the compression indicated with this parameter is used.}

\item{dataType}{(optional) Numeric datatype of the ouptut rasters:
if "Float32" or "Float64" is chosen, numeric values are not rescaled;
if "Int16" (default) or "UInt16", values are multiplicated by a 10000
scale factor.}

\item{overwrite}{Logical value: should existing output files be
overwritten? (default: FALSE)}
}
\value{
A vector with the names of the created products.
}
\description{
Create maps of a set of spectral indices. Since
\code{gdal_calc.py} is used to perform computations, output files
are physical rasters (no output VRT is allowed).
}
\note{
License: GPL 3.0
}
\author{
Luigi Ranghetti, phD (2017) \email{ranghetti.l@irea.cnr.it}
}
